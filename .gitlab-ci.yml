image: python:3.9.7

stages:
#  - pages
  - release


pages:
  image: registry.gitlab.com/markuspichler/swmm_api:latest
  stage: pages
  script:
  - cp README.md ./documentation/README.md
  - cp CHANGELOG.md ./documentation/CHANGELOG.md
  - cp ./examples/hotstart_file_reader.ipynb ./documentation/examples/hotstart_file_reader.ipynb
  - cp ./examples/inp_file_macros.ipynb ./documentation/examples/inp_file_macros.ipynb
  - cp ./examples/inp_file_reader.ipynb ./documentation/examples/inp_file_reader.ipynb
  - cp ./examples/inp_file_structure.ipynb ./documentation/examples/inp_file_structure.ipynb
  - cp ./examples/out_file_reader.ipynb ./documentation/examples/out_file_reader.ipynb
  - cp ./examples/rpt_file_reader.ipynb ./documentation/examples/rpt_file_reader.ipynb
  - cp ./examples/gis_data_to_swmm.ipynb ./documentation/examples/gis_data_to_swmm.ipynb
  - cp ./examples/how_to_add_control_rules.ipynb ./documentation/examples/how_to_add_control_rules.ipynb
  - sphinx-build -b html ./documentation public
  artifacts:
    paths:
    - public
  only:
    refs:
    - main


# https://github.com/python-semantic-release/python-semantic-release
# https://python-semantic-release.readthedocs.io/en/latest/
release-package-python:
  image: registry.gitlab.com/markuspichler/swmm_api:latest
  stage: release
  script:
    - git config --global user.email "gitlab-ci@python-semantic-release.com"
    - git config --global user.name "python-semantic-release"
    - semantic-release publish -v DEBUG --noop
  only:
    refs:
      - main

# Usage: semantic-release [OPTIONS] COMMAND [ARGS]...
#
#Options:
#  -v, --verbosity LVL             Either CRITICAL, ERROR, WARNING, INFO or
#                                  DEBUG
#  --major                         Force major version.
#  --minor                         Force minor version.
#  --patch                         Force patch version.
#  --prerelease                    Creates a prerelease version.
#  --prerelease-patch / --no-prerelease-patch
#                                  whether or not prerelease always gets at
#                                  least a patch-level bump  [default:
#                                  prerelease-patch]
#  --post                          Post changelog.
#  --retry                         Retry the same release, do not bump.
#  --noop                          No-operations mode, finds the new version
#                                  number without changing it.
#  -D, --define TEXT               setting="value", override a configuration
#                                  value.
#  --help                          Show this message and exit.
#
#Commands:
#  changelog      Generate the changelog since the last release.
#  print-version  Print the current or new version to standard output.
#  publish        Run the version task, then push to git and upload to an...
#  version        Detect the new version according to git log and semver.